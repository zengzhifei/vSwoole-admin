<?php
/**
 * Created by PhpStorm.
 * User: zengz
 * Date: 2018/1/2
 * Time: 13:32
 */

namespace Admin\Controller;


class QaCountController extends HudongAdminController
{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub

        $this->connectRedis();

        $this->assign('menuname', "统计排行");
    }

    public function index()
    {
        $tab = I('tab', null);
        $column = $this->column;
        $groupModel = M('group');
        if ($tab == 1) {
            if ($column) {
                //总参与数
                $data['total_user'] = $this->redis->zCard(get_redis_key('QA.TOTAL_QA_RANKING_LIST'));
                $column_id = $column['column_id'];
                //每期参与数
                $stage_list = M('stage')->where(array('column_id' => $column_id))->select();
                if ($stage_list) {
                    foreach ($stage_list as $key => $value) {
                        $value['stage_user'] = $this->redis->zCard(get_redis_key('QA.STAGE_QA_RANKING_LIST', $value['stage_id']));
                        //每组参与数
                        $group_list = $groupModel->where(array('stage_id' => $value['stage_id']))->select();
                        if ($group_list) {
                            foreach ($group_list as $k => $v) {
                                $group_list[$k]['group_user'] = $this->redis->zCard(get_redis_key('QA.GROUP_QA_RANKING_LIST', $v['id']));
                            }
                            $value['group_count'] = $group_list;
                        }
                        $data['stage_count'][] = $value;
                    }
                }
                //个人统计
                $find_user_id = I('find_user_id', null, 'trim');
                if ($find_user_id) {
                    $user_info = M('qa_log')->field('user_id')->where(array('user_phone' => $find_user_id))->find();
                    $user_id = $user_info['user_id'];
                    if ($user_id) {
                        //个人信息
                        $user_info = $this->redis->hGet(get_redis_key('QA.QA_USER_INFO'), $user_id);
                        $data['user_ranking']['user_info'] = $user_info ? json_decode($user_info, true) : false;
                        //总排行个人排行
                        $total_ranking = $this->redis->zReVrank(get_redis_key('QA.TOTAL_QA_RANKING_LIST'), $user_id);
                        $total_score = $this->redis->hGet(get_redis_key('QA.TOTAL_QA_ANSWER_LOG'), $user_id);
                        $data['user_ranking']['total']['total_ranking'] = $total_ranking !== false ? $total_ranking + 1 : false;
                        $data['user_ranking']['total']['total_score'] = $total_score ? json_decode($total_score, true) : false;
                        //每期个人排行
                        foreach ($stage_list as $key => $value) {
                            $stage_ranking = $this->redis->zReVrank(get_redis_key('QA.STAGE_QA_RANKING_LIST', $value['stage_id']), $user_id);
                            $stage_score = $this->redis->hGet(get_redis_key('QA.STAGE_QA_ANSWER_LOG', $value['stage_id']), $user_id);
                            $value['stage_ranking'] = $stage_ranking !== false ? $stage_ranking + 1 : false;
                            $value['stage_score'] = $stage_score ? json_decode($stage_score, true) : false;
                            //分组个人排行
                            $group_list = $groupModel->where(array('stage_id' => $value['stage_id']))->select();
                            if ($group_list) {
                                foreach ($group_list as $k => $v) {
                                    $group_ranking = $this->redis->zReVrank(get_redis_key('QA.GROUP_QA_RANKING_LIST', $v['id']), $user_id);
                                    $group_score = $this->redis->hGet(get_redis_key('QA.GROUP_QA_ANSWER_LOG', $v['id']), $user_id);
                                    $group_list[$k]['group_ranking'] = $group_ranking !== false ? $group_ranking + 1 : false;
                                    $group_list[$k]['group_score'] = $group_score ? json_decode($group_score, true) : false;
                                }
                                $value['group'] = $group_list;
                            }
                            $data['user_ranking']['stage'][] = $value;
                        }
                    }
                }
            }
        } else if ($tab == 2) {
            if ($column) {
                $column_id = $column['column_id'];
                $stage_list = M('stage')->where(array('column_id' => $column_id))->select();
                $find_stage_id = I('find_stage_id', null);
                if ($stage_list && $find_stage_id) {
                    $group_list = M('group')->where(array('stage_id' => $find_stage_id))->select();
                    $find_group_id = I('find_group_id', null);
                    if ($group_list && $find_group_id) {
                        $where = array('stage_id' => $find_stage_id, 'group_id' => $find_group_id);
                        $order = 'SUM(`is_right`) DESC,SUM(`answer_duration`) ASC';
                        $field = 'SUM(`is_right`) as total_right,SUM(`answer_duration`) as total_time,user_id,user_name,user_phone';

                        $p = I('p', 1, 'intval');
                        $total = M('qa_log')->where($where)->group('user_id')->select();
						$total = count($total);
                        $Page = $this->page($total);
                        $show = $Page->weishow();
                        $totalPage = $Page->totalPages;

                        $count_list = M('qa_log')->field($field)->where($where)->group('user_id')->order($order)->limit($Page->firstRow . ',' . $Page->listRows)->select();
                    }
                }
            }
        } else if ($tab == 3) {
            if ($column) {
                $column_id = $column['column_id'];
                $stage_list = M('stage')->where(array('column_id' => $column_id))->select();
                $find_stage_id = I('find_stage_id', null);
                if ($stage_list && $find_stage_id) {
                    $where = array('stage_id' => $find_stage_id);
                    $order = 'SUM(`is_right`) DESC,SUM(`answer_duration`) ASC';
                    $field = 'SUM(`is_right`) as total_right,SUM(`answer_duration`) as total_time,user_id,user_name,user_phone';

                    $p = I('p', 1, 'intval');
                    $total = M('qa_log')->where($where)->group('user_id')->select();
					$total = count($total);
                    $Page = $this->page($total);
                    $show = $Page->weishow();
                    $totalPage = $Page->totalPages;

                    $count_list = M('qa_log')->field($field)->where($where)->group('user_id')->order($order)->limit($Page->firstRow . ',' . $Page->listRows)->select();
                }
            }
        } else if ($tab == 4) {
            if ($column) {
                $column_id = $column['column_id'];
                $stage_list = M('stage')->where(array('column_id' => $column_id))->select();
                $find_stage_id = array('IN', array_column($stage_list, 'stage_id'));
                if ($stage_list && $find_stage_id) {
                    $where = array('stage_id' => $find_stage_id);
                    $order = 'SUM(`is_right`) DESC,SUM(`answer_duration`) ASC';
                    $field = 'SUM(`is_right`) as total_right,SUM(`answer_duration`) as total_time,user_id,user_name,user_phone';

                    $p = I('p', 1, 'intval');
                    $total = M('qa_log')->where($where)->group('user_id')->select();
					$total = count($total);
                    $Page = $this->page($total);
                    $show = $Page->weishow();
                    $totalPage = $Page->totalPages;

                    $count_list = M('qa_log')->field($field)->where($where)->group('user_id')->order($order)->limit($Page->firstRow . ',' . $Page->listRows)->select();
                }
            }
        }
        $this->assign('user_count', $data);
        $this->assign('stage_list', $stage_list);
        $this->assign('group_list', $group_list);
        $this->assign('find_stage_id', $find_stage_id);
        $this->assign('find_group_id', $find_group_id);
        $this->assign('find_user_id', $find_user_id);
        $this->assign('count_list', $count_list);
        $this->assign('tab', $tab);
        $this->assign('p', $p);
        $this->assign('totalPage', $totalPage);
        $this->assign('show', $show);
        $this->display();
    }

    //获取参与答题人数
    private function getQaUserJoinCount($key, $stage_id)
    {
        $count = $this->redis->zCard($key);
        $base_count = $this->redis->hGet(get_redis_key('QA.STAGE_USER_JOIN_BASE'), $stage_id);
        $base_count = $base_count && is_numeric($base_count) && is_int($base_count / 1) && $base_count >= 0 ? $base_count : 0;

        return $count + $base_count;
    }

}