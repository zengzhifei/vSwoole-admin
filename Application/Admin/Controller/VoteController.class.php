<?php/** * 微平台互动的投票功能 * @author masongsong * @date   2015/07/14 */namespace Admin\Controller;use Think\Page;class VoteController extends AdminController{    public function _initialize(){        //parent::_initialize();        $this->CheckAdminLogin();        $userinfo = session('user');        $this->userId = $userinfo['userid'];        $this->assign('menuname', "投票");            }    /**     * 投票的列表     */    public function index(){        $keyword = I('keyword',false);        $type    = I('type',false,'intval');        $option_type = I('option_type',false,'intval');        //$from    = I('from',false);        //$to      = I('to',false);        $p    = I('p',1,'intval');        if($keyword){             $this->assign('keyword',$keyword);            $parameter['keyword'] = $keyword;        }        if($type){            $this->assign('type',$type);            $parameter['type'] = $type;        }        if($option_type){            $this->assign('option_type',$option_type);            $parameter['option_type'] = $option_type;        }        $voteModel = D( 'Vote' );                $count     = $voteModel->getVoteCount($keyword,$type,$option_type,$this->userId);        $Page      = $this->page($count,$parameter);        $show      = $Page->weishow();        $votelist  = $voteModel->getVotelist($keyword,$type,$option_type,$this->userId,$p,$Page->firstRow,$Page->listRows);        $this->assign("p",$p);        $this->assign("totalpage",$Page->totalPages);        $this->assign('list',$votelist);        $this->assign("page",$show);        $this->display('index');    }        /**     * 添加投票     */    public function addVote(){        $type = I( 'type' ,false , 'intval' );        //dump($this->getTemplateByDir());        $this->assign('template',$this->getTemplateByDir());        $this->assign("type",$type);        $this->assign("uid",$this->userId);        $this->display("addVote");    }    /*     * 修改投票页面     */    public function editVote(){        $voteid = I('id',false,'intval');        if($voteid){            $voteModel = D( 'Vote' );            $voteinfo  = $voteModel->getVoteInfoById($voteid);            $optionlist= $voteModel->getVoteOptionById($voteid);            $type = $voteinfo['type'];            $where['id'] = $voteinfo['imgurl'];            $imgurl = $this->getImageinfo($where);            if(!empty($imgurl[0]['path'])){                $imgurl[0]['path'] = C('BASE_URL').__ROOT__.$imgurl[0]['path'];            }else{                $imgurl[0]['path'] = $imgurl[0]['url'];            }            foreach($optionlist as $key => $value){                $where1['id'] = $value['imgurl'];                $optionimgurl = $this->getImageinfo($where1);                if(!empty($optionimgurl[0]['path'])){                    $optionimgurl[0]['path'] = C('BASE_URL').__ROOT__.$optionimgurl[0]['path'];                }else{                    $optionimgurl[0]['path'] = $optionimgurl[0]['url'];                }                $optionlist[$key]['imginfo'] = $optionimgurl[0];                            }            $this->assign('template',$this->getTemplateByDir());            $this->assign('uid',$voteinfo['uid']);            $this->assign('vimginfo',$imgurl[0]);            $this->assign('voteinfo',$voteinfo);            $this->assign('optionlist',$optionlist);        }        $this->display("editVote");    }    /*     * 编辑投票     */    public function saveVote(){        //投票的相关数据        $voteid = I ( 'voteid', 0, 'intval' );        $data['uid'] = I ( 'uid' , false );        $data['keyword'] = I ( 'keyword' , false );        $data['title'] = I( 'title' , false );        $data['starttime'] = I( 'from' , false ,'strtotime' );        $data['endtime'] = I( 'to' , false , 'strtotime' );        $data['imgurl'] = I( 'pic_id' , false , 'intval' );        $data['img_isshow'] = I( 'img_isshow' ,false , 'intval' );        $data['type'] = I( 'type' , false, 'intval' );        $data['optioned_type'] = I( 'optioned_type' , false,'intval');        if($data['optioned_type'] == 2){            $data['option_number'] = I('option_number','','intval');        }        $data['remark'] = I( 'remark' );        $data['result_show'] = I( 'result_show' );        $data['result_order'] = I( 'result_order' );        $data['peverday_maxnum'] = I( 'peverday_maxnum' );        $data['voteperson_maxnum'] = I( 'voteperson_maxnum' );        $data['vote_style'] = I( 'vote_style' );        $data['is_lucky'] = I( 'is_lucky' );        $data['is_register'] = I( 'is_register' );        $data['source'] = I( 'source' );        $voteModel = D( 'Vote' );               //投票选项的相关数据        $optionid=I("option_id");        $title = I('option_title');        $order = I("option_order");        $initnumber = I("option_initvotenum");        if($data['type'] == 2){            $option_imgurl = I('option_imgurlid');            $option_img_jumpurl = I('option_img_jumpurl');        }        $count = count($title);        if($voteid){            $where['id'] = array( 'EQ' , $voteid);            $data['uptime'] = time();            $result = $voteModel->updateVote($where,$data);            if($count>0){                for($i=1;$i<=$count;$i++){                    $option_data[$i]['vote_id']     = $voteid;                    $option_data[$i]['id']          = $optionid[$i];                    $option_data[$i]['title']       = $title[$i];                    if(empty($title[$i])){                        unset($option_data[$i]);                        continue;                    }                    $option_data[$i]['order']       = $order[$i];                    $option_data[$i]['init_votnum'] = $initnumber[$i];                    if($option_imgurl[$i]){                        if( strstr($option_imgurl[$i],'http') || strstr($option_imgurl[$i],'https') || strstr($option_imgurl[$i],'.') ){                            $pic_id = $voteModel->addImageUrl($option_imgurl[$i],$this->userId);                            $option_data[$i]['imgurl'] = $pic_id;                        }else{                            $option_data[$i]['imgurl'] = $option_imgurl[$i];                        }                    }                    if($option_imgurl[$i]) $option_data[$i]['img_jumpurl'] = $option_img_jumpurl[$i];                }                $voteModel->updateVoteoption($option_data);                $removeOptionid = I('removeOption',false);                if($removeOptionid){                    $removeOptionWhere['id'] = array('in',$removeOptionid);                    M('vote_option')->where($removeOptionWhere)->delete();                }            }            if($result){                //$this->success(" ",U('index'));                $data=array('status'=>1,'info'=>'编辑成功');            }else{                //$this->error();                $data=array('status'=>-1,'info'=>'编辑失败');            }        }else{            $data['creattime'] = time();            $voteModel = D( 'Vote' );            $vote_id = $voteModel->addVote($data);            if($vote_id){                if($count>0){                    for($i=1;$i<=$count;$i++){                            $option_data[$i-1]['vote_id'] = intval($vote_id);                            $option_data[$i-1]['title'] = $title[$i];                            if(empty($title[$i])){                                unset($option_data[$i-1]);                                continue;                            }                            $option_data[$i-1]['order'] = $order[$i];                            $option_data[$i-1]['init_votnum'] = $initnumber[$i];                            if($option_imgurl[$i]){                                if(strstr($option_imgurl[$i],'http')||strstr($option_imgurl[$i],'https')||strstr($option_imgurl[$i],'.')){                                    $pic_id = $voteModel->addImageUrl($option_imgurl[$i],$this->userId);                                    $option_data[$i-1]['imgurl'] = $pic_id;                                }else{                                    $option_data[$i-1]['imgurl'] = $option_imgurl[$i];                                }                            }                            if($option_imgurl[$i]) $option_data[$i-1]['img_jumpurl'] = $option_img_jumpurl[$i];                                                 }                    $result = $voteModel->addVoteoption($option_data);                }else{                    $result=true;                }                if($result){                    //$this->success(" ",U('index'));                    $data=array('status'=>1,'info'=>'保存成功');                }else{                    //$this->error();                    $data=array('status'=>-1,'info'=>'选项保存失败');                }            }else{                //$this->error();                $data=array('status'=>-1,'info'=>'投票保存失败');            }                   }        $this->ajaxReturn($data);    }    /*     * 复制投票和投票选项 生成一条新的数据     */    public function copyVote(){        $voteid = I('voteid',false,'intval');        if($voteid){            $voteModel = D( 'Vote' );            $result = $voteModel->copyVote($voteid);            if($result){                $data=array('status'=>1,'info'=>'复制成功');            }else{                $data=array('status'=>-1,'info'=>'复制失败');            }        }else{            $data=array('status'=>-1,'info'=>'缺少投票ID');        }        $this->ajaxReturn($data);            }    /*     * 删除投票和相应的投票选项     */    public function deleteVote(){        $voteid = I('voteid',false);        if($voteid){            $voteModel = D( 'Vote' );            $result = $voteModel->deleteVote($voteid);            if($result){                $data=array('status'=>1,'info'=>'删除成功');            }else{                $data=array('status'=>-1,'info'=>'删除失败');            }        }else{            $data=array('status'=>-1,'info'=>'缺少投票ID');        }        $this->ajaxReturn($data);    }        /*     * 结束投票     */    public function endVote(){        $voteid = I('voteid',false,'intval');        if($voteid){            $voteModel = D( 'Vote' );            $where['id'] = array('EQ',$voteid);            $param['endtime'] = time();            $param['is_end'] = intval(1);            $result = $voteModel->updateVote($where,$param);            if($result){                $data=array('status'=>1);            }else{                $data=array('status'=>-1,'info'=>'操作失败');            }        }else{            $data=array('status'=>-1,'info'=>'缺少投票ID');        }        $this->ajaxReturn($data);    }            /*     * 后台投票的统计     */    public function chsetVote(){        $voteid = I('voteid');        $voteModel = D( 'Vote' );        $voteinfo = $voteModel->getVoteInfoById($voteid);        $voteinfo['count'] = $voteModel->chsetVote($voteid);        $voteoptionlist = $voteModel->getVoteOptionById($voteid);        foreach($voteoptionlist as $key=>$value){            $voteoptionlist[$key]['count'] = $voteModel->chsetOption($value['id']);            $voteoptionlist[$key]['count_bafen'] = round($voteoptionlist[$key]['count']/$voteinfo['count']*100,2).'%';        }        //dump($voteinfo);        $this->assign('voteinfo',$voteinfo);        $this->assign("optionlist",$voteoptionlist);        $this->display('chsetVote');    }        /*     * 导出投票数据     */    public function exportVote(){        $voteid = I('voteid',false);        if($voteid){            $voteModel = D( 'Vote' );            $voteinfo = $voteModel->getVoteInfoById($voteid);            $voteinfo['count'] = $voteModel->chsetVote($voteid);            $voteoptionlist = $voteModel->getVoteOptionById($voteid);            if($voteinfo['type'] == 1){                $type = "文字投票";            }else{                $type = "图片投票";            }            if($voteinfo['optioned_type']==1){                $optiontype = "单选";            }else{                $optiontype = "多选";            }            foreach($voteoptionlist as $key=>$value){                $voteoptionlist[$key]['count'] = $voteModel->chsetOption($value['id']);                $voteoptionlist[$key]['count_bafen'] = round($voteoptionlist[$key]['count']/$voteinfo['count']*100,2).'%';                                $str.=$value['id'].",".$voteinfo['title'].",".$value['title'].",".$type.",".$optiontype.",".$voteinfo['count'].",".$voteoptionlist[$key]['count'].",".$voteoptionlist[$key]['count_bafen']."\n";            }        }else{            $str = "暂无数据";        }        $data = mb_convert_encoding($str,"gb2312","UTF-8");        $title="ID,投票,选项,投票类型,选择类型,投票总参与人数,选项参与人数,选项参与人数百分比\n";        $filename="vote_".$voteid."".date('Ymd',$voteinfo['creattime']).".csv";        $this->export_csv($title,$filename,$data);    }}